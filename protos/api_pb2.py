# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='api.proto',
  package='Api',
  syntax='proto3',
  serialized_pb=_b('\n\tapi.proto\x12\x03\x41pi\"[\n\x13TransactionResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\x04\x12%\n\x0btransaction\x18\x03 \x03(\x0b\x32\x10.Api.Transaction\"G\n\x14RecieverConfirmation\x12\x0c\n\x04hash\x18\x01 \x01(\t\x12!\n\tsignature\x18\x02 \x01(\x0b\x32\x0e.Api.Signature\"\xd8\x01\n\rAssetResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\x04\x12\x11\n\ttimestamp\x18\x03 \x01(\x04\x12\x19\n\x05\x61sset\x18\x04 \x01(\x0b\x32\n.Api.Asset\x12%\n\x0bsimpleAsset\x18\x05 \x01(\x0b\x32\x10.Api.SimpleAsset\x12\x1b\n\x06\x64omain\x18\x06 \x01(\x0b\x32\x0b.Api.Domain\x12\x1d\n\x07\x61\x63\x63ount\x18\x07 \x01(\x0b\x32\x0c.Api.Account\x12\x17\n\x04peer\x18\x08 \x01(\x0b\x32\t.Api.Peer\"o\n\x0eStatusResponse\x12\r\n\x05value\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\x04\x12*\n\x07\x63onfirm\x18\x04 \x01(\x0b\x32\x19.Api.RecieverConfirmation\"z\n\x05Query\x12\x0c\n\x04type\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x03(\x0b\x32\x15.Api.Query.ValueEntry\x1a=\n\nValueEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.Api.BaseObject:\x02\x38\x01\"o\n\nBaseObject\x12\x15\n\x0bvalueString\x18\x01 \x01(\tH\x00\x12\x12\n\x08valueInt\x18\x02 \x01(\x03H\x00\x12\x16\n\x0cvalueBoolean\x18\x03 \x01(\x08H\x00\x12\x15\n\x0bvalueDouble\x18\x04 \x01(\x01H\x00\x42\x07\n\x05value\"f\n\x0bSimpleAsset\x12\x0e\n\x06\x64omain\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x1e\n\x05value\x18\x03 \x01(\x0b\x32\x0f.Api.BaseObject\x12\x19\n\x11smartContractName\x18\x04 \x01(\t\"\xa5\x01\n\x05\x41sset\x12\x0e\n\x06\x64omain\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12$\n\x05value\x18\x03 \x03(\x0b\x32\x15.Api.Asset.ValueEntry\x12\x19\n\x11smartContractName\x18\x04 \x01(\t\x1a=\n\nValueEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.Api.BaseObject:\x02\x38\x01\".\n\x06\x44omain\x12\x16\n\x0eownerPublicKey\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\":\n\x07\x41\x63\x63ount\x12\x11\n\tpublicKey\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06\x61ssets\x18\x03 \x03(\t\"$\n\x05Trust\x12\r\n\x05value\x18\x01 \x01(\x01\x12\x0c\n\x04isOk\x18\x02 \x01(\x08\"E\n\x04Peer\x12\x11\n\tpublicKey\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\t\x12\x19\n\x05trust\x18\x03 \x01(\x0b\x32\n.Api.Trust\"1\n\tSignature\x12\x11\n\tpublicKey\x18\x01 \x01(\t\x12\x11\n\tsignature\x18\x02 \x01(\t\"\xa6\x02\n\x0bTransaction\x12$\n\x0ctxSignatures\x18\x01 \x03(\x0b\x32\x0e.Api.Signature\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x14\n\x0csenderPubkey\x18\x03 \x01(\t\x12\x0c\n\x04hash\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\x04\x12\x19\n\x05\x61sset\x18\x06 \x01(\x0b\x32\n.Api.Asset\x12%\n\x0bsimpleAsset\x18\x07 \x01(\x0b\x32\x10.Api.SimpleAsset\x12\x1b\n\x06\x64omain\x18\x08 \x01(\x0b\x32\x0b.Api.Domain\x12\x1d\n\x07\x61\x63\x63ount\x18\t \x01(\x0b\x32\x0c.Api.Account\x12\x17\n\x04peer\x18\n \x01(\x0b\x32\t.Api.Peer\x12\x15\n\rreceivePubkey\x18\x0b \x01(\t\"\x7f\n\x0e\x43onsensusEvent\x12\'\n\x0f\x65ventSignatures\x18\x01 \x03(\x0b\x32\x0e.Api.Signature\x12%\n\x0btransaction\x18\x02 \x01(\x0b\x32\x10.Api.Transaction\x12\r\n\x05order\x18\x03 \x01(\x04\x12\x0e\n\x06status\x18\x04 \x01(\t2G\n\x15TransactionRepository\x12.\n\x04\x66ind\x12\n.Api.Query\x1a\x18.Api.TransactionResponse\"\x00\x32;\n\x0f\x41ssetRepository\x12(\n\x04\x66ind\x12\n.Api.Query\x1a\x12.Api.AssetResponse\"\x00\x32r\n\x08Sumeragi\x12\x30\n\x05Torii\x12\x10.Api.Transaction\x1a\x13.Api.StatusResponse\"\x00\x12\x34\n\x06Verify\x12\x13.Api.ConsensusEvent\x1a\x13.Api.StatusResponse\"\x00\x42\x03\x80\x01\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_TRANSACTIONRESPONSE = _descriptor.Descriptor(
  name='TransactionResponse',
  full_name='Api.TransactionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='Api.TransactionResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='Api.TransactionResponse.code', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transaction', full_name='Api.TransactionResponse.transaction', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=109,
)


_RECIEVERCONFIRMATION = _descriptor.Descriptor(
  name='RecieverConfirmation',
  full_name='Api.RecieverConfirmation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hash', full_name='Api.RecieverConfirmation.hash', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signature', full_name='Api.RecieverConfirmation.signature', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=182,
)


_ASSETRESPONSE = _descriptor.Descriptor(
  name='AssetResponse',
  full_name='Api.AssetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='Api.AssetResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='Api.AssetResponse.code', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='Api.AssetResponse.timestamp', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asset', full_name='Api.AssetResponse.asset', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='simpleAsset', full_name='Api.AssetResponse.simpleAsset', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='domain', full_name='Api.AssetResponse.domain', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='account', full_name='Api.AssetResponse.account', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='peer', full_name='Api.AssetResponse.peer', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=185,
  serialized_end=401,
)


_STATUSRESPONSE = _descriptor.Descriptor(
  name='StatusResponse',
  full_name='Api.StatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='Api.StatusResponse.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='Api.StatusResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='Api.StatusResponse.timestamp', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confirm', full_name='Api.StatusResponse.confirm', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=403,
  serialized_end=514,
)


_QUERY_VALUEENTRY = _descriptor.Descriptor(
  name='ValueEntry',
  full_name='Api.Query.ValueEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Api.Query.ValueEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Api.Query.ValueEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=577,
  serialized_end=638,
)

_QUERY = _descriptor.Descriptor(
  name='Query',
  full_name='Api.Query',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='Api.Query.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Api.Query.value', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUERY_VALUEENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=516,
  serialized_end=638,
)


_BASEOBJECT = _descriptor.Descriptor(
  name='BaseObject',
  full_name='Api.BaseObject',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='valueString', full_name='Api.BaseObject.valueString', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='valueInt', full_name='Api.BaseObject.valueInt', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='valueBoolean', full_name='Api.BaseObject.valueBoolean', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='valueDouble', full_name='Api.BaseObject.valueDouble', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='Api.BaseObject.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=640,
  serialized_end=751,
)


_SIMPLEASSET = _descriptor.Descriptor(
  name='SimpleAsset',
  full_name='Api.SimpleAsset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='domain', full_name='Api.SimpleAsset.domain', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='Api.SimpleAsset.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Api.SimpleAsset.value', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='smartContractName', full_name='Api.SimpleAsset.smartContractName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=753,
  serialized_end=855,
)


_ASSET_VALUEENTRY = _descriptor.Descriptor(
  name='ValueEntry',
  full_name='Api.Asset.ValueEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Api.Asset.ValueEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Api.Asset.ValueEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=577,
  serialized_end=638,
)

_ASSET = _descriptor.Descriptor(
  name='Asset',
  full_name='Api.Asset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='domain', full_name='Api.Asset.domain', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='Api.Asset.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Api.Asset.value', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='smartContractName', full_name='Api.Asset.smartContractName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ASSET_VALUEENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=858,
  serialized_end=1023,
)


_DOMAIN = _descriptor.Descriptor(
  name='Domain',
  full_name='Api.Domain',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ownerPublicKey', full_name='Api.Domain.ownerPublicKey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='Api.Domain.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1025,
  serialized_end=1071,
)


_ACCOUNT = _descriptor.Descriptor(
  name='Account',
  full_name='Api.Account',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='publicKey', full_name='Api.Account.publicKey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='Api.Account.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assets', full_name='Api.Account.assets', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1073,
  serialized_end=1131,
)


_TRUST = _descriptor.Descriptor(
  name='Trust',
  full_name='Api.Trust',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='Api.Trust.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isOk', full_name='Api.Trust.isOk', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1133,
  serialized_end=1169,
)


_PEER = _descriptor.Descriptor(
  name='Peer',
  full_name='Api.Peer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='publicKey', full_name='Api.Peer.publicKey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='address', full_name='Api.Peer.address', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trust', full_name='Api.Peer.trust', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1171,
  serialized_end=1240,
)


_SIGNATURE = _descriptor.Descriptor(
  name='Signature',
  full_name='Api.Signature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='publicKey', full_name='Api.Signature.publicKey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signature', full_name='Api.Signature.signature', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1242,
  serialized_end=1291,
)


_TRANSACTION = _descriptor.Descriptor(
  name='Transaction',
  full_name='Api.Transaction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='txSignatures', full_name='Api.Transaction.txSignatures', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='Api.Transaction.type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='senderPubkey', full_name='Api.Transaction.senderPubkey', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hash', full_name='Api.Transaction.hash', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='Api.Transaction.timestamp', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asset', full_name='Api.Transaction.asset', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='simpleAsset', full_name='Api.Transaction.simpleAsset', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='domain', full_name='Api.Transaction.domain', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='account', full_name='Api.Transaction.account', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='peer', full_name='Api.Transaction.peer', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='receivePubkey', full_name='Api.Transaction.receivePubkey', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1294,
  serialized_end=1588,
)


_CONSENSUSEVENT = _descriptor.Descriptor(
  name='ConsensusEvent',
  full_name='Api.ConsensusEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='eventSignatures', full_name='Api.ConsensusEvent.eventSignatures', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transaction', full_name='Api.ConsensusEvent.transaction', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='order', full_name='Api.ConsensusEvent.order', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='Api.ConsensusEvent.status', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1590,
  serialized_end=1717,
)

_TRANSACTIONRESPONSE.fields_by_name['transaction'].message_type = _TRANSACTION
_RECIEVERCONFIRMATION.fields_by_name['signature'].message_type = _SIGNATURE
_ASSETRESPONSE.fields_by_name['asset'].message_type = _ASSET
_ASSETRESPONSE.fields_by_name['simpleAsset'].message_type = _SIMPLEASSET
_ASSETRESPONSE.fields_by_name['domain'].message_type = _DOMAIN
_ASSETRESPONSE.fields_by_name['account'].message_type = _ACCOUNT
_ASSETRESPONSE.fields_by_name['peer'].message_type = _PEER
_STATUSRESPONSE.fields_by_name['confirm'].message_type = _RECIEVERCONFIRMATION
_QUERY_VALUEENTRY.fields_by_name['value'].message_type = _BASEOBJECT
_QUERY_VALUEENTRY.containing_type = _QUERY
_QUERY.fields_by_name['value'].message_type = _QUERY_VALUEENTRY
_BASEOBJECT.oneofs_by_name['value'].fields.append(
  _BASEOBJECT.fields_by_name['valueString'])
_BASEOBJECT.fields_by_name['valueString'].containing_oneof = _BASEOBJECT.oneofs_by_name['value']
_BASEOBJECT.oneofs_by_name['value'].fields.append(
  _BASEOBJECT.fields_by_name['valueInt'])
_BASEOBJECT.fields_by_name['valueInt'].containing_oneof = _BASEOBJECT.oneofs_by_name['value']
_BASEOBJECT.oneofs_by_name['value'].fields.append(
  _BASEOBJECT.fields_by_name['valueBoolean'])
_BASEOBJECT.fields_by_name['valueBoolean'].containing_oneof = _BASEOBJECT.oneofs_by_name['value']
_BASEOBJECT.oneofs_by_name['value'].fields.append(
  _BASEOBJECT.fields_by_name['valueDouble'])
_BASEOBJECT.fields_by_name['valueDouble'].containing_oneof = _BASEOBJECT.oneofs_by_name['value']
_SIMPLEASSET.fields_by_name['value'].message_type = _BASEOBJECT
_ASSET_VALUEENTRY.fields_by_name['value'].message_type = _BASEOBJECT
_ASSET_VALUEENTRY.containing_type = _ASSET
_ASSET.fields_by_name['value'].message_type = _ASSET_VALUEENTRY
_PEER.fields_by_name['trust'].message_type = _TRUST
_TRANSACTION.fields_by_name['txSignatures'].message_type = _SIGNATURE
_TRANSACTION.fields_by_name['asset'].message_type = _ASSET
_TRANSACTION.fields_by_name['simpleAsset'].message_type = _SIMPLEASSET
_TRANSACTION.fields_by_name['domain'].message_type = _DOMAIN
_TRANSACTION.fields_by_name['account'].message_type = _ACCOUNT
_TRANSACTION.fields_by_name['peer'].message_type = _PEER
_CONSENSUSEVENT.fields_by_name['eventSignatures'].message_type = _SIGNATURE
_CONSENSUSEVENT.fields_by_name['transaction'].message_type = _TRANSACTION
DESCRIPTOR.message_types_by_name['TransactionResponse'] = _TRANSACTIONRESPONSE
DESCRIPTOR.message_types_by_name['RecieverConfirmation'] = _RECIEVERCONFIRMATION
DESCRIPTOR.message_types_by_name['AssetResponse'] = _ASSETRESPONSE
DESCRIPTOR.message_types_by_name['StatusResponse'] = _STATUSRESPONSE
DESCRIPTOR.message_types_by_name['Query'] = _QUERY
DESCRIPTOR.message_types_by_name['BaseObject'] = _BASEOBJECT
DESCRIPTOR.message_types_by_name['SimpleAsset'] = _SIMPLEASSET
DESCRIPTOR.message_types_by_name['Asset'] = _ASSET
DESCRIPTOR.message_types_by_name['Domain'] = _DOMAIN
DESCRIPTOR.message_types_by_name['Account'] = _ACCOUNT
DESCRIPTOR.message_types_by_name['Trust'] = _TRUST
DESCRIPTOR.message_types_by_name['Peer'] = _PEER
DESCRIPTOR.message_types_by_name['Signature'] = _SIGNATURE
DESCRIPTOR.message_types_by_name['Transaction'] = _TRANSACTION
DESCRIPTOR.message_types_by_name['ConsensusEvent'] = _CONSENSUSEVENT

TransactionResponse = _reflection.GeneratedProtocolMessageType('TransactionResponse', (_message.Message,), dict(
  DESCRIPTOR = _TRANSACTIONRESPONSE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.TransactionResponse)
  ))
_sym_db.RegisterMessage(TransactionResponse)

RecieverConfirmation = _reflection.GeneratedProtocolMessageType('RecieverConfirmation', (_message.Message,), dict(
  DESCRIPTOR = _RECIEVERCONFIRMATION,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.RecieverConfirmation)
  ))
_sym_db.RegisterMessage(RecieverConfirmation)

AssetResponse = _reflection.GeneratedProtocolMessageType('AssetResponse', (_message.Message,), dict(
  DESCRIPTOR = _ASSETRESPONSE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.AssetResponse)
  ))
_sym_db.RegisterMessage(AssetResponse)

StatusResponse = _reflection.GeneratedProtocolMessageType('StatusResponse', (_message.Message,), dict(
  DESCRIPTOR = _STATUSRESPONSE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.StatusResponse)
  ))
_sym_db.RegisterMessage(StatusResponse)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), dict(

  ValueEntry = _reflection.GeneratedProtocolMessageType('ValueEntry', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_VALUEENTRY,
    __module__ = 'api_pb2'
    # @@protoc_insertion_point(class_scope:Api.Query.ValueEntry)
    ))
  ,
  DESCRIPTOR = _QUERY,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.Query)
  ))
_sym_db.RegisterMessage(Query)
_sym_db.RegisterMessage(Query.ValueEntry)

BaseObject = _reflection.GeneratedProtocolMessageType('BaseObject', (_message.Message,), dict(
  DESCRIPTOR = _BASEOBJECT,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.BaseObject)
  ))
_sym_db.RegisterMessage(BaseObject)

SimpleAsset = _reflection.GeneratedProtocolMessageType('SimpleAsset', (_message.Message,), dict(
  DESCRIPTOR = _SIMPLEASSET,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.SimpleAsset)
  ))
_sym_db.RegisterMessage(SimpleAsset)

Asset = _reflection.GeneratedProtocolMessageType('Asset', (_message.Message,), dict(

  ValueEntry = _reflection.GeneratedProtocolMessageType('ValueEntry', (_message.Message,), dict(
    DESCRIPTOR = _ASSET_VALUEENTRY,
    __module__ = 'api_pb2'
    # @@protoc_insertion_point(class_scope:Api.Asset.ValueEntry)
    ))
  ,
  DESCRIPTOR = _ASSET,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.Asset)
  ))
_sym_db.RegisterMessage(Asset)
_sym_db.RegisterMessage(Asset.ValueEntry)

Domain = _reflection.GeneratedProtocolMessageType('Domain', (_message.Message,), dict(
  DESCRIPTOR = _DOMAIN,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.Domain)
  ))
_sym_db.RegisterMessage(Domain)

Account = _reflection.GeneratedProtocolMessageType('Account', (_message.Message,), dict(
  DESCRIPTOR = _ACCOUNT,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.Account)
  ))
_sym_db.RegisterMessage(Account)

Trust = _reflection.GeneratedProtocolMessageType('Trust', (_message.Message,), dict(
  DESCRIPTOR = _TRUST,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.Trust)
  ))
_sym_db.RegisterMessage(Trust)

Peer = _reflection.GeneratedProtocolMessageType('Peer', (_message.Message,), dict(
  DESCRIPTOR = _PEER,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.Peer)
  ))
_sym_db.RegisterMessage(Peer)

Signature = _reflection.GeneratedProtocolMessageType('Signature', (_message.Message,), dict(
  DESCRIPTOR = _SIGNATURE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.Signature)
  ))
_sym_db.RegisterMessage(Signature)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), dict(
  DESCRIPTOR = _TRANSACTION,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.Transaction)
  ))
_sym_db.RegisterMessage(Transaction)

ConsensusEvent = _reflection.GeneratedProtocolMessageType('ConsensusEvent', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSEVENT,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:Api.ConsensusEvent)
  ))
_sym_db.RegisterMessage(ConsensusEvent)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\200\001\000'))
_QUERY_VALUEENTRY.has_options = True
_QUERY_VALUEENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_ASSET_VALUEENTRY.has_options = True
_ASSET_VALUEENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class TransactionRepositoryStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.find = channel.unary_unary(
        '/Api.TransactionRepository/find',
        request_serializer=Query.SerializeToString,
        response_deserializer=TransactionResponse.FromString,
        )


class TransactionRepositoryServicer(object):

  def find(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TransactionRepositoryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'find': grpc.unary_unary_rpc_method_handler(
          servicer.find,
          request_deserializer=Query.FromString,
          response_serializer=TransactionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Api.TransactionRepository', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaTransactionRepositoryServicer(object):
  def find(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaTransactionRepositoryStub(object):
  def find(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  find.future = None


def beta_create_TransactionRepository_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('Api.TransactionRepository', 'find'): Query.FromString,
  }
  response_serializers = {
    ('Api.TransactionRepository', 'find'): TransactionResponse.SerializeToString,
  }
  method_implementations = {
    ('Api.TransactionRepository', 'find'): face_utilities.unary_unary_inline(servicer.find),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_TransactionRepository_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('Api.TransactionRepository', 'find'): Query.SerializeToString,
  }
  response_deserializers = {
    ('Api.TransactionRepository', 'find'): TransactionResponse.FromString,
  }
  cardinalities = {
    'find': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'Api.TransactionRepository', cardinalities, options=stub_options)


class AssetRepositoryStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.find = channel.unary_unary(
        '/Api.AssetRepository/find',
        request_serializer=Query.SerializeToString,
        response_deserializer=AssetResponse.FromString,
        )


class AssetRepositoryServicer(object):

  def find(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AssetRepositoryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'find': grpc.unary_unary_rpc_method_handler(
          servicer.find,
          request_deserializer=Query.FromString,
          response_serializer=AssetResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Api.AssetRepository', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaAssetRepositoryServicer(object):
  def find(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaAssetRepositoryStub(object):
  def find(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  find.future = None


def beta_create_AssetRepository_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('Api.AssetRepository', 'find'): Query.FromString,
  }
  response_serializers = {
    ('Api.AssetRepository', 'find'): AssetResponse.SerializeToString,
  }
  method_implementations = {
    ('Api.AssetRepository', 'find'): face_utilities.unary_unary_inline(servicer.find),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_AssetRepository_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('Api.AssetRepository', 'find'): Query.SerializeToString,
  }
  response_deserializers = {
    ('Api.AssetRepository', 'find'): AssetResponse.FromString,
  }
  cardinalities = {
    'find': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'Api.AssetRepository', cardinalities, options=stub_options)


class SumeragiStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Torii = channel.unary_unary(
        '/Api.Sumeragi/Torii',
        request_serializer=Transaction.SerializeToString,
        response_deserializer=StatusResponse.FromString,
        )
    self.Verify = channel.unary_unary(
        '/Api.Sumeragi/Verify',
        request_serializer=ConsensusEvent.SerializeToString,
        response_deserializer=StatusResponse.FromString,
        )


class SumeragiServicer(object):

  def Torii(self, request, context):
    """=+===+=
    ==+=T=+==
    |   |
    |   |   This is gate at the entrance of sumeragi...
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Verify(self, request, context):
    """sumeragi uses.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SumeragiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Torii': grpc.unary_unary_rpc_method_handler(
          servicer.Torii,
          request_deserializer=Transaction.FromString,
          response_serializer=StatusResponse.SerializeToString,
      ),
      'Verify': grpc.unary_unary_rpc_method_handler(
          servicer.Verify,
          request_deserializer=ConsensusEvent.FromString,
          response_serializer=StatusResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Api.Sumeragi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaSumeragiServicer(object):
  def Torii(self, request, context):
    """=+===+=
    ==+=T=+==
    |   |
    |   |   This is gate at the entrance of sumeragi...
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Verify(self, request, context):
    """sumeragi uses.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaSumeragiStub(object):
  def Torii(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """=+===+=
    ==+=T=+==
    |   |
    |   |   This is gate at the entrance of sumeragi...
    """
    raise NotImplementedError()
  Torii.future = None
  def Verify(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """sumeragi uses.
    """
    raise NotImplementedError()
  Verify.future = None


def beta_create_Sumeragi_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('Api.Sumeragi', 'Torii'): Transaction.FromString,
    ('Api.Sumeragi', 'Verify'): ConsensusEvent.FromString,
  }
  response_serializers = {
    ('Api.Sumeragi', 'Torii'): StatusResponse.SerializeToString,
    ('Api.Sumeragi', 'Verify'): StatusResponse.SerializeToString,
  }
  method_implementations = {
    ('Api.Sumeragi', 'Torii'): face_utilities.unary_unary_inline(servicer.Torii),
    ('Api.Sumeragi', 'Verify'): face_utilities.unary_unary_inline(servicer.Verify),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Sumeragi_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('Api.Sumeragi', 'Torii'): Transaction.SerializeToString,
    ('Api.Sumeragi', 'Verify'): ConsensusEvent.SerializeToString,
  }
  response_deserializers = {
    ('Api.Sumeragi', 'Torii'): StatusResponse.FromString,
    ('Api.Sumeragi', 'Verify'): StatusResponse.FromString,
  }
  cardinalities = {
    'Torii': cardinality.Cardinality.UNARY_UNARY,
    'Verify': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'Api.Sumeragi', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
